In this lab there were 5 subproblems that had to be solved using various programming stategies introduced in class. The 5 problems were as follows:

1. N Queens Problem

The N Queen is the problem of placing N chess queens on an N×N chessboard so that no two queens attack each other.
The idea is to place queens one by one in different columns, starting from the leftmost column. When placing a queen in a column, you should check 
for clashes with already placed queens (no more than one Q in the row and column).

2. Acyclic Graph

Given an undirected graph, you are required to check if the graph has a cycle.

3. Minimum Spanning Tree

Given a weighted undirected graph, you are required to find the minimum spanning tree in the
graph using Prim’s algorithm.

4. Knapsack Problem

John enters a candy shop and in his hand is a very light-thin bag. He is given 20 mins to collect
as much candy as possible, but he needs to make sure that the bag doesn’t tear apart. There’s a
fixed number of candies in the shop – each with its own weight and sentimental value. Of course,
his goal is to put as many candies in the bag as possible while also maximizing the number of
best-quality candies so that he can enjoy the treat during the weekend. Plus, he doesn’t want to
share the candy with anyone since the candy placed in the bag is of the most value with respect
to him.

But John needs your help! So, can you be kind and help him choose the candy he’s required to
put in the bag and the ones he’s supposed to keep at the store?

5. Longest Increasing Subsequence

The Longest Increasing Subsequence (LIS) problem is to find the length of the longest
subsequence of a given sequence such that all elements of the subsequence are sorted
in increasing order.

Write a Dynamic programming solution for LIS. Print the LIS and the elements that formed
this LIS.
